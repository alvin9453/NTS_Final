<!DOCTYPE html>
<html>
<head>
    <title>即時互動問答</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="/stylesheets/style.css">
    <link rel="stylesheet" href="/stylesheets/irs-student.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>   

    <script src="/socket.io/socket.io.js"></script>
    <script src="/javascripts/RTCMultiConnection.min.js"></script>

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script>
        var userEmail = "<%= user.emails[0].value %>";
        var thisUserEID = userEmail.split('@')[0];

        var connection = new RTCMultiConnection(null, {
            useDefaultDevices: true // if we don't need to force selection of specific devices
        });
        connection.socketURL = '/';
        connection.socketMessageEvent = 'note-taking-system';
        var socket = connection.getSocket();

        google.charts.load('current', {'packages':['corechart']});

        function createButtonInList(qid,value,text){
            var btn = document.createElement('a');
            btn.setAttribute('id' , qid + "-" + value);
            btn.setAttribute('onclick',"sendAnswer(\'" + qid + "\',this.value);");
            btn.setAttribute('class',"list-group-item btn btn-default");
            btn.value = value;
            btn.innerHTML = text;
            return btn;
        }
        function sendAnswer(qid , option){
             socket.emit("studentAnswer" , {"qid" : qid ,"answer" : option });

             //disable this question button
             
             document.getElementById(qid + "-A").style.pointerEvents = "none";
             document.getElementById(qid + "-B").style.pointerEvents = "none";
             if(document.getElementById(qid + "-C"))
                document.getElementById(qid + "-C").style.pointerEvents = "none";
             if(document.getElementById(qid + "-D"))
                document.getElementById(qid + "-D").style.pointerEvents = "none";
             document.getElementById(qid + "-" + option ).style.background = "#FFDD55";

        }
        function appendQuestion(question){
            var questionBlock = document.getElementById("questionBlock");
            var ulElement = document.createElement("ul");
            ulElement.setAttribute("style" , "list-style-type:none")
            ulElement.setAttribute("class" , "list-group");

            var qid = question.qid;
            var optionA = question.optionA;
            var optionB = question.optionB;
            var optionC = question.optionC;
            var optionD = question.optionD;

            var questionTitle = document.createElement("li");
            questionTitle.setAttribute('id' , qid + "-Q");
            questionTitle.innerHTML = question.title;
            
        
            /* Option A */
            var opAElement = document.createElement("li");
            opAElement.append(createButtonInList(qid ,'A' , "A. " + optionA ));
            ulElement.append(opAElement);

            /* Option B */
            var opBElement = document.createElement("li");
            opBElement.append(createButtonInList(qid , 'B' , "B. " + optionB ));
            ulElement.append(opBElement);
            
            if(optionC){
                var opCElement = document.createElement("li");
                opCElement.append(createButtonInList(qid , 'C' , "C. " + optionC ));
                ulElement.append(opCElement);
                if(optionD){  // 有 C 選項，才會有 D 選項，不給跳號啦
                    var opDElement = document.createElement("li");
                    opDElement.append(createButtonInList(qid, 'D' , "D. " + optionD ));
                    ulElement.append(opDElement);
                }
            }            
            questionTitle.append(ulElement);
            questionBlock.append(questionTitle);
            

        }

        function msgSendBtn(){
            var msg = document.getElementById("msg").value;
            var msgBlock = document.getElementById("messageBlock");
            document.getElementById("msg").value = "";
            if(isSlashAnswer(msg)){    // Students only send answer
                var index = msg.split(" ")[1];
                if( !validInputQunstionNumber(index) ){
                    displayEachMessage("【系統】題號錯誤" , "system-alert");  
                    return;
                }else{
                    var content = "";
                    for( var i = 2; i < msg.split(" ").length; i++){
                        content += msg.split(" ")[i] + " ";
                    }
                    content.trim();
                    var newAns = document.createElement("div");
                    newAns.innerHTML = "<font color='green'>(回答 : " + content + ")</font>";
                    var slashQuestionsHtmlCollection = document.getElementById("slashQuestionBlock").getElementsByTagName("li");
                    var realIndex = Number(index) - 1;
                    var qid = slashQuestionsHtmlCollection[realIndex].id;
                    slashQuestionsHtmlCollection[realIndex].appendChild(newAns);
                    displayEachMessage("【系統】您已回答問題 <b>" + index + "</b>" , "system-ans");
                    socket.emit('inputSlashAnswer' , {uname : " <%= user.displayName %>" ,  uid : thisUserEID , msg : msg , qid : qid} );
                }
            }else if(isSlashQuestion(msg)){
                displayEachMessage("【系統】教師限定功能" , "system-alert");  
            }else{
                socket.emit('inputMessage' , {uname : " <%= user.displayName %>" ,  uid : thisUserEID , msg : msg , character : "student" } );
            }
            
        }

        function validInputQunstionNumber(index){
            var slashQuestionsHtmlCollection = document.getElementById("slashQuestionBlock").getElementsByTagName("li");
            var totalQuestionInList = slashQuestionsHtmlCollection.length;
            if( Number(index) > totalQuestionInList || Number(index) < 1){
                return false;
            }else{
                return true;
            }
        }
    
        function displayEachMessage(content , type){
            // msgType : 1. msg , 2. system-q , 3. system-ans 4. system-alert
            var msgBlock = document.getElementById("messageBlock");
            var newMsg = document.createElement("li");
            switch(type){
                case "msg" :
                    newMsg.setAttribute("class" , "msg");
                    break;
                case "system-q" :
                    newMsg.setAttribute("class" , "systemMsg-q");
                    break;
                case "system-ans" :
                    newMsg.setAttribute("class" , "systemMsg-ans");
                    break;
                case "system-alert" :
                    newMsg.setAttribute("class" , "systemMsg-alert");
                    break;
            }
            newMsg.innerHTML = content;
            msgBlock.append(newMsg);
            msgBlock.scrollTop = msgBlock.scrollHeight;
        }
        function displayEachSlashQuestion(content , qid){
            var msgBlock = document.getElementById("slashQuestionBlock");
            var newMsg = document.createElement("li");
            newMsg.setAttribute("class" , "slashQuestion");
            newMsg.setAttribute("id" , qid);
            newMsg.innerHTML = content;
            msgBlock.append(newMsg);
            msgBlock.scrollTop = msgBlock.scrollHeight;
        }

        function isSlashQuestion(msg){
            var qaPatt= /^\/Q\s.+/i;
            return qaPatt.test(msg);
        }
        function isSlashAnswer(msg){
            var qaPatt= /^\/A\s[\d]+\s.+/i;
            return qaPatt.test(msg);
        }


        /* socket.on */
        socket.on('newQuestion' , function(question){
            appendQuestion(question);
        });
        
        socket.on('answerStatistics', function(result){
            var qid = result.qid;
            if( document.getElementById(qid + "-A").style.pointerEvents != "none")
                return;
            // Create the data table.
            var title = (document.getElementById(qid + "-Q").innerHTML).split('<')[0];
            var countA = result.countA;
            var countB = result.countB;
            var countC = result.countC;
            var countD = result.countD;
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Topping');
            data.addColumn('number', 'Slices');
            data.addRows([
                ['A', Number(countA)],
                ['B', Number(countB)],
                ['C', Number(countC)],
                ['D', Number(countD)]
            ]);

            // Set chart options
            var options = {'title': title,
                            'titleTextStyle' : {
                                fontSize : 16, fontName : 'Noto Sans TC', bold : false
                        },
                        'legend' : { textStyle: { fontSize: 14} },
                        'pieSliceTextStyle' : {
                            fontName : 'Noto Sans TC',
                            fontSize : 16,
                        },
                        'width':500,
                        'height':200};

            // Instantiate and draw our chart, passing in some options.
            var newDiv = document.createElement('div');
            newDiv.setAttribute('id' , qid);
            chartDiv.append(newDiv);
            var chart = new google.visualization.PieChart(document.getElementById(qid));

            chart.draw(data, options);
        });

        socket.on('msgBroadcast', function(msgObj){
            var msg = msgObj.msg;
            var userName = msgObj.uname;
            var showMsg = ""
            if ( isSlashQuestion(msg) ){ // Slash Command /Q
                showMsg = msg.slice(3);
                displayEachSlashQuestion(showMsg);
                displayEachMessage("【系統】已新增一則問題" , "system-q");
            }else{  // Normal message
                if(msgObj.character == "teacher")
                    showMsg += "[教師]"
                showMsg += userName + " : " + msg;
                displayEachMessage(showMsg);
            }
        });
        socket.on('slashQuestion', function(msg){
            var showMsg = msg.msg.slice(3);
            var userName = msg.uname;
            var qid = msg.qid;
            displayEachSlashQuestion(showMsg , qid);
            displayEachMessage("【系統】已新增一則問題" , "system-q");
        });

    </script>

</head>
<body>
</body>
    <% include layouts/header %>
    <br><br><br>
    <h2 align="center">即時互動問答</h1>   
    <hr> 
    <div class="container">
        <div class="row">
            <div class="col-sm-6 col-md-6">
                    <h3 align="center">互動聊天室</h3>
                    <ul id="messageBlock" class="messageBlock"></ul>
                    <div class="form-group">
                        <br>
                        <input class="form-control" id="msg" autocomplete="off" />
                        <button id="msgSendBtn" class="btn btn-primary" onclick="msgSendBtn()" style="float: right;">送出</button>
                        <script>
                            /* Enter trigger onclick event */
                            var msgInput = document.getElementById("msg");
                            msgInput.addEventListener("keyup", function(event) {
                                event.preventDefault();
                                if (event.keyCode === 13) {
                                    document.getElementById("msgSendBtn").click();
                                }
                            });
                        </script>
                    </div>
            </div>
            <div class="col-sm-6 col-md-6">
                    <h3 align="center">斜線指令問答紀錄</h3>
                    <ul id="slashQuestionBlock" class="slashQuestionBlock"></ul>
            </div>
        </div>
        <hr>
        <div class="row">
            <div class="col-sm-6 col-md-6">
                <h2 align="center">選項</h2>
                <ul class="list-group" id="questionBlock"></ul>
            </div>
            <div class="col-sm-4 col-md-4">
                <h2 align="center">統計資料</h2>
                <div id="chartDiv" align="center"></div>
            </div>
            
        </div>
    </div>
    <div class="footer">
            <% include layouts/footer %>
    </div>
          

</html>
